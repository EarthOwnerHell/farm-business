const { getGlobal } = require("../../database/manager/global")
const { setNewWithdraw } = require("../../database/manager/user")
const { Dep } = require("../../database/models")
const { reviewMenu } = require("../../keyboards/inline")
const { sendPayment, getBalanceQiwi } = require("../../settings/qiwi")
const { vkMsg, vkMsgKeyboard, vk } = require('../../settings/vk')
const { formClick, numberWithSpace } = require("../../tools")
const userWithdraw = require('../../database/manager/withdraw')


module.exports = withdrawnMoney = async (msg) => {

    const { businesses, rubBalance, lastEarn, id, phone, ref: { value }, tolyaGiveHimDollars } = msg.user
    const { eventId, userId, peerId } = msg
    const { percentCourse } = await getGlobal()
    const balanceQiwi = await getBalanceQiwi()
    const firstDep = await Dep.findOne({ userId: id })
    // const withdraws = await userWithdraw.getLast(userId)
    // console.log(withdraws)

    console.log(msg.user)

    // if (!firstDep && value < 7) return vkMsg(id, 'üò® –í–∞–º –Ω–∞–¥–æ –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å —Ö–æ—Ç—è –±—ã –Ω–∞ 1–û–† –∏–ª–∏ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å 7 —á–µ–ª–æ–≤–µ–∫ –ø–æ —Ä–µ—Ñ.—Å—Å—ã–ª–∫–µ, –≤–µ–¥—å —Ä–∞–±–æ—á–∏–º —Ç–æ–∂–µ —Ö–æ—á–µ—Ç—Å—è –∫—É—à–∞—Ç—å?') //
    // if (value - countRefs > 3) return vkMsg(id, '–í–∞–º –Ω–∞–¥–æ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å 3-—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –≤—ã–≤–æ–¥–æ–≤, —Å–ø–∞—Å–∏–±–æ!')
    // if (value < 5 || !tolyaGiveHimDollars) return vkMsg(id, 'üò® –í–∞–º –Ω–∞–¥–æ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å 5 —á–µ–ª–æ–≤–µ–∫ –ø–æ —Ä–µ—Ñ.—Å—Å—ã–ª–∫–µ, –≤–µ–¥—å —Ä–∞–±–æ—á–∏–º —Ç–æ–∂–µ —Ö–æ—á–µ—Ç—Å—è –∫—É—à–∞—Ç—å?')// 

    let countBusinesses = 0

    const earnBusinesses = {
        market: 1200,
        hospital: 2820,
        motel: 6600,
        theatre: 13300,
        hotel: 26400,
        airoport: 41400
    }

    Object.entries(businesses).forEach((business) => {

        if (business[1]) {
            countBusinesses += earnBusinesses[business[0]] * business[1]
        }

    })

    let timePassed = Date.now() - lastEarn;
    let earned$ = Math.floor((timePassed * countBusinesses) / 86_400_000) // –ü—Ä–∏–Ω–µ—Å–ª–∏
    msg.user.privilege == "businessGig" ? earned$ = (Math.floor((timePassed * countBusinesses) / 86_400_000)) * 2 : null

    if (earned$ >= 1_000_000) {
        if (msg.user.privilege === 'businessGig' && earned$ >= 2_000_000) {
            earned$ = 2_000_000
        } else {
            earned$ = 1_000_000
        }
    }

    if (!phone) return vkMsg(id, 'üò® –ë–æ–∂–µ—á–∫–∏-–∫–æ—à–µ—á–∫–∏, –∫–∞–∂–µ—Ç—Å—è, –≤—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –Ω–æ–º–µ—Ä –¥–ª—è –≤—ã–≤–æ–¥–∞!\nüò® –°–¥–µ–ª–∞–π—Ç–µ —ç—Ç–æ –≤ –ø—Ä–æ—Ñ–∏–ª–µ!')

    if (earned$ / (16000 + earned$ * percentCourse / 100) + Number(rubBalance) < 5) return vkMsg(id, 'üòë –í—ã–≤–æ–¥ –¥–æ—Å—Ç—É–ø–µ–Ω –æ—Ç 5-—Ç–∏ —Ä—É–±–ª–µ–π, –ø–æ–¥–æ–∂–¥–∏ –Ω–µ–º–Ω–æ–≥–æ :)')

    if (earned$ / (16000 + earned$ * percentCourse / 100) + Number(rubBalance) > balanceQiwi) return vkMsg(id, 'üò¢ –ü–æ—Ö–æ–∂–µ —É –Ω–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –±–∞–ª–∞–Ω—Å–∞ –Ω–∞ QIWI :(\n\nü§î –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ')

    const res = await sendPayment(earned$ / (16000 + earned$ * percentCourse / 100) + Number(rubBalance), phone)

    const answer = await Promise.all([userWithdraw.create(id, earned$ / (16000 + earned$ * percentCourse / 100) + Number(rubBalance), value),
    vkMsgKeyboard(id, `üìù –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Å—Ç–∞–≤—å—Ç–µ —Å–≤–æ–π –æ—Ç–∑—ã–≤`, reviewMenu),
    setNewWithdraw(id, earned$ + (16000 * rubBalance))
    ])

    vk.api.messages.sendMessageEventAnswer({
        event_id: eventId,
        user_id: userId,
        peer_id: peerId,
        event_data: JSON.stringify({
            'type': 'show_snackbar',
            'text': `üî• –í—ã–≤–µ–ª–∏ [ ${numberWithSpace(earned$ / (16000 + earned$ * percentCourse / 100) + Number(rubBalance))}‚ÇΩ ] !`
        })
    })
}
